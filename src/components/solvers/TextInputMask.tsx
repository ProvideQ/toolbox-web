import { Divider } from "@chakra-ui/react";
import Head from "next/head";
import { ReactElement, useState } from "react";
import { baseUrl } from "../../api/ToolboxAPI";
import { Container } from "../Container";
import { EditorControls } from "./EditorControls";
import {
  GrammarSettings,
  SyntaxHighlightedTextarea,
} from "./SAT/SyntaxHighlightedTextarea";

export interface TextInputMaskProperties {
  problemTypeId: string;
  textPlaceholder: string;
  text: string;
  setText: (text: string) => void;
  validate?: (text: string) => string[] | null;
  grammar?: GrammarSettings;
  body?: ReactElement;
}

export const TextInputMask = (props: TextInputMaskProperties) => {
  const [errorString, setErrorString] = useState("");

  function onTextChanged(newText: string): void {
    try {
      props.setText(newText);

      let errors = props.validate?.(newText);
      if (errors) {
        setErrorString(errors.toString());
      } else {
        setErrorString("");
      }
    } catch (e: any) {
      setErrorString(e.message);
    }
  }

  return (
    <Container gap="1rem">
      <Head>
        <title>ProvideQ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        {/* TODO: replace favicon */}
      </Head>

      <EditorControls
        errorText={errorString}
        idleText={props.textPlaceholder + " ðŸ‘‡"}
        setEditorContent={onTextChanged}
        editorContent={props.text}
        documentationLink={`${baseUrl()}/webjars/swagger-ui/index.html#/${
          props.problemTypeId
        }`}
      />

      <SyntaxHighlightedTextarea
        text={props.text}
        setText={onTextChanged}
        placeholder={props.textPlaceholder}
        isInvalid={errorString != ""}
        grammar={props.grammar}
      />

      {props.body}

      <Divider />
    </Container>
  );
};
